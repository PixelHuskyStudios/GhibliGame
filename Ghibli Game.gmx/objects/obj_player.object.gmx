<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mikasa_forward</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0
hsp = 0
movex = 0
movey = 0
movespeed = 4
image_speed = 0;
//Defining Sprite Set
define_sprite();
//Sprite Variables DON'T TOUCH
sprite[k.left] = false;
sprite[k.right] = false;
sprite[k.up] = false;
sprite[k.down] = false;

//Doubling size
scale = 1;
image_yscale = scale;
image_xscale = scale;
img_speed = 0.2
sprite_index = neutral;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = -keyboard_check(vk_left)
key_right = keyboard_check(vk_right)
key_up = -keyboard_check(vk_up)
key_down = keyboard_check(vk_down)

movex = key_left + key_right
hsp = movex * movespeed
movey = key_up + key_down
vsp = movey * movespeed
//H collsion
if (place_meeting(x + hsp,y,collision)) {
    while(!place_meeting(x+sign(hsp),y,collision)) {
        x += sign(hsp)
    }
    hsp = 0
}
    x += hsp
//V collsion
if (place_meeting(x,y + vsp,collision)) {
    while(!place_meeting(x,y+sign(vsp),collision)) {
        y += sign(vsp)
    }
    vsp = 0
}
    
y += vsp
//Depth Control
depth = y*-1
//Changing Sprites
if (keyboard_check(vk_left)) {
    image_speed = img_speed;
    sprite_index = x_axis;
    image_xscale = -scale;
}

if (keyboard_check(vk_right)) {
    image_speed = img_speed;
    sprite_index = x_axis;
    image_xscale = scale;
}

if (keyboard_check(vk_down)) {
    image_speed = img_speed;
    sprite_index = down;
} 

if (keyboard_check(vk_up)) {
    image_speed = img_speed;
    sprite_index = up;
}

if (keyboard_check(vk_nokey)) {
    image_speed = 0;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_portal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//portal[0].world = 0;
//portal[1].world = 1;
//portal[2].world = 2;
//portal[3].world = 3;

if (other.world = 0) {
    room_goto(rm_mononokeIronTown);
} else if (other.world = 1) {
    room_goto(rm_earthseaHorttown);
} else if (other.world = 2) {
    room_goto(rm_spirtedBathhouse);
} else if (other.world = 3) {
    room_goto(rm_arrietyHouse);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
